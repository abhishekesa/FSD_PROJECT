import type { Logger } from '@forestadmin/datasource-toolkit';
import { DataSource } from '@forestadmin/datasource-toolkit';
export default class TypingGenerator {
    private readonly logger;
    private readonly options;
    constructor(logger: Logger, options?: {
        maxFieldsCount?: number;
    });
    private static sortedEntries;
    /**
     * Write types to disk at a given path.
     * This method read the file which is already there before overwriting so that customers
     * using equivalents to nodemon to not enter restart loops.
     */
    updateTypesOnFileSystem(dataSource: DataSource, typingsPath: string, typingsMaxDepth: number): Promise<void>;
    /**
     * Generates types on a string.
     */
    generateTypes(dataSource: DataSource, maxDepth: number): string;
    private generateAliases;
    private getRow;
    private getRelations;
    private getFlatRelations;
    private getFieldsOnCollection;
    private getStrictType;
    private getType;
}
//# sourceMappingURL=typing-generator.d.ts.map
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const datasource_toolkit_1 = require("@forestadmin/datasource-toolkit");
const build_default_condition_1 = __importDefault(require("./utils/build-default-condition"));
function buildBooleanFieldFilter(field, filterOperators, searchString, isNegated) {
    const operator = isNegated ? 'NotEqual' : 'Equal';
    if (filterOperators?.has(operator)) {
        if (['true', '1'].includes(searchString?.toLowerCase())) {
            if (isNegated && filterOperators.has('Missing')) {
                return datasource_toolkit_1.ConditionTreeFactory.union(new datasource_toolkit_1.ConditionTreeLeaf(field, operator, true), new datasource_toolkit_1.ConditionTreeLeaf(field, 'Missing', null));
            }
            return new datasource_toolkit_1.ConditionTreeLeaf(field, operator, true);
        }
        if (['false', '0'].includes(searchString?.toLowerCase())) {
            if (isNegated && filterOperators.has('Missing')) {
                return datasource_toolkit_1.ConditionTreeFactory.union(new datasource_toolkit_1.ConditionTreeLeaf(field, operator, false), new datasource_toolkit_1.ConditionTreeLeaf(field, 'Missing', null));
            }
            return new datasource_toolkit_1.ConditionTreeLeaf(field, operator, false);
        }
    }
    return (0, build_default_condition_1.default)(isNegated);
}
exports.default = buildBooleanFieldFilter;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVpbGQtYm9vbGVhbi1maWVsZC1maWx0ZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvZGVjb3JhdG9ycy9zZWFyY2gvZmlsdGVyLWJ1aWxkZXIvYnVpbGQtYm9vbGVhbi1maWVsZC1maWx0ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSx3RUFLeUM7QUFFekMsOEZBQW9FO0FBRXBFLFNBQXdCLHVCQUF1QixDQUM3QyxLQUFhLEVBQ2IsZUFBOEIsRUFDOUIsWUFBb0IsRUFDcEIsU0FBa0I7SUFFbEIsTUFBTSxRQUFRLEdBQUcsU0FBUyxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQztJQUVsRCxJQUFJLGVBQWUsRUFBRSxHQUFHLENBQUMsUUFBUSxDQUFDLEVBQUU7UUFDbEMsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLENBQUMsQ0FBQyxRQUFRLENBQUMsWUFBWSxFQUFFLFdBQVcsRUFBRSxDQUFDLEVBQUU7WUFDdkQsSUFBSSxTQUFTLElBQUksZUFBZSxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsRUFBRTtnQkFDL0MsT0FBTyx5Q0FBb0IsQ0FBQyxLQUFLLENBQy9CLElBQUksc0NBQWlCLENBQUMsS0FBSyxFQUFFLFFBQVEsRUFBRSxJQUFJLENBQUMsRUFDNUMsSUFBSSxzQ0FBaUIsQ0FBQyxLQUFLLEVBQUUsU0FBUyxFQUFFLElBQUksQ0FBQyxDQUM5QyxDQUFDO2FBQ0g7WUFFRCxPQUFPLElBQUksc0NBQWlCLENBQUMsS0FBSyxFQUFFLFFBQVEsRUFBRSxJQUFJLENBQUMsQ0FBQztTQUNyRDtRQUVELElBQUksQ0FBQyxPQUFPLEVBQUUsR0FBRyxDQUFDLENBQUMsUUFBUSxDQUFDLFlBQVksRUFBRSxXQUFXLEVBQUUsQ0FBQyxFQUFFO1lBQ3hELElBQUksU0FBUyxJQUFJLGVBQWUsQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLEVBQUU7Z0JBQy9DLE9BQU8seUNBQW9CLENBQUMsS0FBSyxDQUMvQixJQUFJLHNDQUFpQixDQUFDLEtBQUssRUFBRSxRQUFRLEVBQUUsS0FBSyxDQUFDLEVBQzdDLElBQUksc0NBQWlCLENBQUMsS0FBSyxFQUFFLFNBQVMsRUFBRSxJQUFJLENBQUMsQ0FDOUMsQ0FBQzthQUNIO1lBRUQsT0FBTyxJQUFJLHNDQUFpQixDQUFDLEtBQUssRUFBRSxRQUFRLEVBQUUsS0FBSyxDQUFDLENBQUM7U0FDdEQ7S0FDRjtJQUVELE9BQU8sSUFBQSxpQ0FBcUIsRUFBQyxTQUFTLENBQUMsQ0FBQztBQUMxQyxDQUFDO0FBakNELDBDQWlDQyJ9
"use strict";
/* eslint-disable no-continue */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const datasource_toolkit_1 = require("@forestadmin/datasource-toolkit");
const build_default_condition_1 = __importDefault(require("./utils/build-default-condition"));
const operatorsStack = [
    [['IContains'], ['NotIContains', 'Missing']],
    [['Contains'], ['NotContains', 'Missing']],
    [['Equal'], ['NotEqual', 'Missing']],
];
function buildStringFieldFilter(field, filterOperators, searchString, isNegated) {
    if (!searchString) {
        if (filterOperators.has('Equal') && !isNegated) {
            return new datasource_toolkit_1.ConditionTreeLeaf(field, 'Equal', '');
        }
        if (filterOperators.has('NotEqual') && isNegated) {
            if (filterOperators.has('Missing')) {
                return datasource_toolkit_1.ConditionTreeFactory.union(new datasource_toolkit_1.ConditionTreeLeaf(field, 'NotEqual', ''), new datasource_toolkit_1.ConditionTreeLeaf(field, 'Missing'));
            }
            return new datasource_toolkit_1.ConditionTreeLeaf(field, 'NotEqual', '');
        }
        return (0, build_default_condition_1.default)(isNegated);
    }
    for (const [positiveOperators, negativeOperators] of operatorsStack) {
        const operators = isNegated ? negativeOperators : positiveOperators;
        const neededOperators = operators.filter(operator => operator !== 'Missing' || filterOperators.has(operator));
        if (!neededOperators.every(operator => filterOperators.has(operator)))
            continue;
        return datasource_toolkit_1.ConditionTreeFactory.union(...neededOperators.map(operator => new datasource_toolkit_1.ConditionTreeLeaf(field, operator, operator !== 'Missing' ? searchString : undefined)));
    }
    return (0, build_default_condition_1.default)(isNegated);
}
exports.default = buildStringFieldFilter;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVpbGQtc3RyaW5nLWZpZWxkLWZpbHRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9kZWNvcmF0b3JzL3NlYXJjaC9maWx0ZXItYnVpbGRlci9idWlsZC1zdHJpbmctZmllbGQtZmlsdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxnQ0FBZ0M7Ozs7O0FBRWhDLHdFQUt5QztBQUV6Qyw4RkFBb0U7QUFFcEUsTUFBTSxjQUFjLEdBQStCO0lBQ2pELENBQUMsQ0FBQyxXQUFXLENBQUMsRUFBRSxDQUFDLGNBQWMsRUFBRSxTQUFTLENBQUMsQ0FBQztJQUM1QyxDQUFDLENBQUMsVUFBVSxDQUFDLEVBQUUsQ0FBQyxhQUFhLEVBQUUsU0FBUyxDQUFDLENBQUM7SUFDMUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsVUFBVSxFQUFFLFNBQVMsQ0FBQyxDQUFDO0NBQ3JDLENBQUM7QUFFRixTQUF3QixzQkFBc0IsQ0FDNUMsS0FBYSxFQUNiLGVBQThCLEVBQzlCLFlBQW9CLEVBQ3BCLFNBQWtCO0lBRWxCLElBQUksQ0FBQyxZQUFZLEVBQUU7UUFDakIsSUFBSSxlQUFlLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFO1lBQzlDLE9BQU8sSUFBSSxzQ0FBaUIsQ0FBQyxLQUFLLEVBQUUsT0FBTyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1NBQ2xEO1FBRUQsSUFBSSxlQUFlLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxJQUFJLFNBQVMsRUFBRTtZQUNoRCxJQUFJLGVBQWUsQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLEVBQUU7Z0JBQ2xDLE9BQU8seUNBQW9CLENBQUMsS0FBSyxDQUMvQixJQUFJLHNDQUFpQixDQUFDLEtBQUssRUFBRSxVQUFVLEVBQUUsRUFBRSxDQUFDLEVBQzVDLElBQUksc0NBQWlCLENBQUMsS0FBSyxFQUFFLFNBQVMsQ0FBQyxDQUN4QyxDQUFDO2FBQ0g7WUFFRCxPQUFPLElBQUksc0NBQWlCLENBQUMsS0FBSyxFQUFFLFVBQVUsRUFBRSxFQUFFLENBQUMsQ0FBQztTQUNyRDtRQUVELE9BQU8sSUFBQSxpQ0FBcUIsRUFBQyxTQUFTLENBQUMsQ0FBQztLQUN6QztJQUVELEtBQUssTUFBTSxDQUFDLGlCQUFpQixFQUFFLGlCQUFpQixDQUFDLElBQUksY0FBYyxFQUFFO1FBQ25FLE1BQU0sU0FBUyxHQUFHLFNBQVMsQ0FBQyxDQUFDLENBQUMsaUJBQWlCLENBQUMsQ0FBQyxDQUFDLGlCQUFpQixDQUFDO1FBRXBFLE1BQU0sZUFBZSxHQUFHLFNBQVMsQ0FBQyxNQUFNLENBQ3RDLFFBQVEsQ0FBQyxFQUFFLENBQUMsUUFBUSxLQUFLLFNBQVMsSUFBSSxlQUFlLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUNwRSxDQUFDO1FBRUYsSUFBSSxDQUFDLGVBQWUsQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxlQUFlLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBQUUsU0FBUztRQUVoRixPQUFPLHlDQUFvQixDQUFDLEtBQUssQ0FDL0IsR0FBRyxlQUFlLENBQUMsR0FBRyxDQUNwQixRQUFRLENBQUMsRUFBRSxDQUNULElBQUksc0NBQWlCLENBQUMsS0FBSyxFQUFFLFFBQVEsRUFBRSxRQUFRLEtBQUssU0FBUyxDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUM1RixDQUNGLENBQUM7S0FDSDtJQUVELE9BQU8sSUFBQSxpQ0FBcUIsRUFBQyxTQUFTLENBQUMsQ0FBQztBQUMxQyxDQUFDO0FBM0NELHlDQTJDQyJ9
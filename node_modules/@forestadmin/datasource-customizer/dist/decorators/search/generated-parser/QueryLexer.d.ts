import { ATN, CharStream, DFA, Lexer } from "antlr4";
export default class QueryLexer extends Lexer {
    static readonly T__0 = 1;
    static readonly PARENS_OPEN = 2;
    static readonly PARENS_CLOSE = 3;
    static readonly OR = 4;
    static readonly AND = 5;
    static readonly SINGLE_QUOTED = 6;
    static readonly DOUBLE_QUOTED = 7;
    static readonly NEGATION = 8;
    static readonly TOKEN = 9;
    static readonly SEPARATOR = 10;
    static readonly SPACING = 11;
    static readonly EOF: number;
    static readonly channelNames: string[];
    static readonly literalNames: (string | null)[];
    static readonly symbolicNames: (string | null)[];
    static readonly modeNames: string[];
    static readonly ruleNames: string[];
    constructor(input: CharStream);
    get grammarFileName(): string;
    get literalNames(): (string | null)[];
    get symbolicNames(): (string | null)[];
    get ruleNames(): string[];
    get serializedATN(): number[];
    get channelNames(): string[];
    get modeNames(): string[];
    static readonly _serializedATN: number[];
    private static __ATN;
    static get _ATN(): ATN;
    static DecisionsToDFA: DFA[];
}
//# sourceMappingURL=QueryLexer.d.ts.map